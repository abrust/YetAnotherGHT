{
	"name": "PANDEMIC OPENROWSET queries",
	"properties": {
		"content": {
			"query": "-- CSV file contains header row; query uses HEADER_ROW = TRUE:\nSELECT \n\t*\nFROM OPENROWSET(\n    BULK 'https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/ecdc_cases/latest/ecdc_cases.csv',\n    FORMAT = 'CSV',\n    PARSER_VERSION = '2.0',\n\tHEADER_ROW = TRUE) as [r]\n\n-- CSV file does not contain header row; query doesn't use HEADER_ROW = TRUE:\nSELECT \n\t*\nFROM OPENROWSET(\n    BULK 'https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/ecdc_cases/latest/ecdc_cases.csv',\n    FORMAT = 'CSV',\n    PARSER_VERSION = '2.0') as [r]\n\n-- Parquet file (schema inside):\nSELECT \n    TOP 1 *\nFROM  \n    OPENROWSET(\n        BULK 'https://azureopendatastorage.blob.core.windows.net/censusdatacontainer/release/us_population_county/year=20*/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [r]\n\nSELECT \n\t* \n\n-- CSV with no header row, but with schema (for two columns) specified\n-- Note the 1 and 4 at the end of the two column definitions, which indicate the ordinal of the corresponding column\n-- Query fails due to bad filespec\nSELECT \n\t* \nFROM OPENROWSET(\n        BULK 'https://sqlondemandstorage.blob.core.windows.net/csv/population/population*.csv',\n        FORMAT = 'CSV',\n        FIRSTROW = 1\n    )\nWITH (\n    [country_code] VARCHAR (5) COLLATE Latin1_General_BIN2 1,\n    [population] bigint 4\n) AS [r]\n\n-- Schema specification for certain columns from Parquet file:\nSELECT \n    TOP 1 *\nFROM  \n    OPENROWSET(\n        BULK 'https://azureopendatastorage.blob.core.windows.net/censusdatacontainer/release/us_population_county/year=20*/*.parquet',\n        FORMAT='PARQUET'\n    )\nWITH (\n\t[stateName] VARCHAR (50),\n\t[population] bigint\n) AS [r]\n\n\n-- Read JSON file and specifcy schema\n-- Note use of lax and strict path modes\nSELECT \n    TOP 1 *\nFROM  \n    OPENROWSET(\n        BULK 'https://azureopendatastorage.blob.core.windows.net/censusdatacontainer/release/us_population_county/year=20*/*.parquet',\n        FORMAT='PARQUET'\n    )\nWITH (\n\t--lax path mode samples\n\t[stateName] VARCHAR (50), -- this one works as column name casing is valid - it targets the same column as the next one\n\t[stateName_explicit_path] VARCHAR (50) '$.stateName', -- this one works as column name casing is valid\n\t[COUNTYNAME] VARCHAR (50), -- COUNTYname column will contain NULLs only because of wrong casing - it targets the same column as the next one\n\t[countyName_explicit_path] VARCHAR (50) '$.COUNTYNAME', -- COUNTYname column will contain NULLS only because of wrong casing and default path mode being lax\n\n\t--strict path mode samples\n\t[population] bigint 'strict $.population' -- this one works as column name casing is valid\n\t--,[population2] bigint 'strict $.POPULATION' -- this one fails because of wrong casing and strict path mode\n)\nAS [r]",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"poolName": "Built-in",
				"databaseName": "master"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}